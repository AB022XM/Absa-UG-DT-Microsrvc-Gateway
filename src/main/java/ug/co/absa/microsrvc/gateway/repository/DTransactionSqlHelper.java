package ug.co.absa.microsrvc.gateway.repository;

import java.util.ArrayList;
import java.util.List;
import org.springframework.data.relational.core.sql.Column;
import org.springframework.data.relational.core.sql.Expression;
import org.springframework.data.relational.core.sql.Table;

public class DTransactionSqlHelper {

    public static List<Expression> getColumns(Table table, String columnPrefix) {
        List<Expression> columns = new ArrayList<>();
        columns.add(Column.aliased("id", table, columnPrefix + "_id"));
        columns.add(Column.aliased("absa_tran_ref", table, columnPrefix + "_absa_tran_ref"));
        columns.add(Column.aliased("biller_id", table, columnPrefix + "_biller_id"));
        columns.add(Column.aliased("payment_item_code", table, columnPrefix + "_payment_item_code"));
        columns.add(Column.aliased("dt_d_transaction_id", table, columnPrefix + "_dt_d_transaction_id"));
        columns.add(Column.aliased("amol_d_transaction_id", table, columnPrefix + "_amol_d_transaction_id"));
        columns.add(Column.aliased("transaction_reference_number", table, columnPrefix + "_transaction_reference_number"));
        columns.add(Column.aliased("external_tranid", table, columnPrefix + "_external_tranid"));
        columns.add(Column.aliased("token", table, columnPrefix + "_token"));
        columns.add(Column.aliased("transfer_id", table, columnPrefix + "_transfer_id"));
        columns.add(Column.aliased("product_code", table, columnPrefix + "_product_code"));
        columns.add(Column.aliased("payment_channel_code", table, columnPrefix + "_payment_channel_code"));
        columns.add(Column.aliased("account_number", table, columnPrefix + "_account_number"));
        columns.add(Column.aliased("amount", table, columnPrefix + "_amount"));
        columns.add(Column.aliased("debit_amount", table, columnPrefix + "_debit_amount"));
        columns.add(Column.aliased("credit_amount", table, columnPrefix + "_credit_amount"));
        columns.add(Column.aliased("settlement_amount", table, columnPrefix + "_settlement_amount"));
        columns.add(Column.aliased("settlement_date", table, columnPrefix + "_settlement_date"));
        columns.add(Column.aliased("transaction_date", table, columnPrefix + "_transaction_date"));
        columns.add(Column.aliased("is_retried", table, columnPrefix + "_is_retried"));
        columns.add(Column.aliased("last_retry_date", table, columnPrefix + "_last_retry_date"));
        columns.add(Column.aliased("first_retry_date", table, columnPrefix + "_first_retry_date"));
        columns.add(Column.aliased("retry_respose_code", table, columnPrefix + "_retry_respose_code"));
        columns.add(Column.aliased("retry_response_message", table, columnPrefix + "_retry_response_message"));
        columns.add(Column.aliased("retry_count", table, columnPrefix + "_retry_count"));
        columns.add(Column.aliased("is_retriable_flg", table, columnPrefix + "_is_retriable_flg"));
        columns.add(Column.aliased("do_not_retry_d_transaction", table, columnPrefix + "_do_not_retry_d_transaction"));
        columns.add(Column.aliased("status", table, columnPrefix + "_status"));
        columns.add(Column.aliased("status_code", table, columnPrefix + "_status_code"));
        columns.add(Column.aliased("status_details", table, columnPrefix + "_status_details"));
        columns.add(Column.aliased("retries", table, columnPrefix + "_retries"));
        columns.add(Column.aliased("timestamp", table, columnPrefix + "_timestamp"));
        columns.add(Column.aliased("posted_by", table, columnPrefix + "_posted_by"));
        columns.add(Column.aliased("posted_date", table, columnPrefix + "_posted_date"));
        columns.add(Column.aliased("internal_error_code", table, columnPrefix + "_internal_error_code"));
        columns.add(Column.aliased("external_error_code", table, columnPrefix + "_external_error_code"));
        columns.add(Column.aliased("is_cross_currency", table, columnPrefix + "_is_cross_currency"));
        columns.add(Column.aliased("is_cross_bank", table, columnPrefix + "_is_cross_bank"));
        columns.add(Column.aliased("currency", table, columnPrefix + "_currency"));
        columns.add(Column.aliased("credit_account", table, columnPrefix + "_credit_account"));
        columns.add(Column.aliased("debit_account", table, columnPrefix + "_debit_account"));
        columns.add(Column.aliased("phone_number", table, columnPrefix + "_phone_number"));
        columns.add(Column.aliased("customer_number", table, columnPrefix + "_customer_number"));
        columns.add(Column.aliased("tran_status", table, columnPrefix + "_tran_status"));
        columns.add(Column.aliased("tran_status_details", table, columnPrefix + "_tran_status_details"));
        columns.add(Column.aliased("tran_free_field_1", table, columnPrefix + "_tran_free_field_1"));
        columns.add(Column.aliased("tran_free_field_2", table, columnPrefix + "_tran_free_field_2"));
        columns.add(Column.aliased("tran_free_field_3", table, columnPrefix + "_tran_free_field_3"));
        columns.add(Column.aliased("tran_free_field_4", table, columnPrefix + "_tran_free_field_4"));
        columns.add(Column.aliased("tran_free_field_5", table, columnPrefix + "_tran_free_field_5"));
        columns.add(Column.aliased("tran_free_field_6", table, columnPrefix + "_tran_free_field_6"));
        columns.add(Column.aliased("tran_free_field_7", table, columnPrefix + "_tran_free_field_7"));
        columns.add(Column.aliased("tran_free_field_8", table, columnPrefix + "_tran_free_field_8"));
        columns.add(Column.aliased("tran_free_field_9", table, columnPrefix + "_tran_free_field_9"));
        columns.add(Column.aliased("tran_free_field_10", table, columnPrefix + "_tran_free_field_10"));
        columns.add(Column.aliased("tran_free_field_11", table, columnPrefix + "_tran_free_field_11"));
        columns.add(Column.aliased("tran_free_field_12", table, columnPrefix + "_tran_free_field_12"));
        columns.add(Column.aliased("tran_free_field_13", table, columnPrefix + "_tran_free_field_13"));
        columns.add(Column.aliased("tran_free_field_14", table, columnPrefix + "_tran_free_field_14"));
        columns.add(Column.aliased("tran_free_field_14_content_type", table, columnPrefix + "_tran_free_field_14_content_type"));
        columns.add(Column.aliased("tran_free_field_15", table, columnPrefix + "_tran_free_field_15"));
        columns.add(Column.aliased("tran_free_field_16", table, columnPrefix + "_tran_free_field_16"));
        columns.add(Column.aliased("tran_free_field_17", table, columnPrefix + "_tran_free_field_17"));
        columns.add(Column.aliased("tran_free_field_18", table, columnPrefix + "_tran_free_field_18"));
        columns.add(Column.aliased("tran_free_field_19", table, columnPrefix + "_tran_free_field_19"));
        columns.add(Column.aliased("tran_free_field_20", table, columnPrefix + "_tran_free_field_20"));
        columns.add(Column.aliased("tran_free_field_21", table, columnPrefix + "_tran_free_field_21"));
        columns.add(Column.aliased("tran_free_field_22", table, columnPrefix + "_tran_free_field_22"));
        columns.add(Column.aliased("tran_free_field_23", table, columnPrefix + "_tran_free_field_23"));
        columns.add(Column.aliased("tran_free_field_24", table, columnPrefix + "_tran_free_field_24"));
        columns.add(Column.aliased("tran_free_field_25", table, columnPrefix + "_tran_free_field_25"));
        columns.add(Column.aliased("tran_free_field_26", table, columnPrefix + "_tran_free_field_26"));
        columns.add(Column.aliased("tran_free_field_27", table, columnPrefix + "_tran_free_field_27"));
        columns.add(Column.aliased("tran_free_field_28", table, columnPrefix + "_tran_free_field_28"));
        columns.add(Column.aliased("created_at", table, columnPrefix + "_created_at"));
        columns.add(Column.aliased("created_by", table, columnPrefix + "_created_by"));
        columns.add(Column.aliased("updated_at", table, columnPrefix + "_updated_at"));
        columns.add(Column.aliased("updated_by", table, columnPrefix + "_updated_by"));

        columns.add(Column.aliased("transaction_id", table, columnPrefix + "_transaction_id"));
        columns.add(Column.aliased("transaction_id", table, columnPrefix + "_transaction_id"));
        columns.add(Column.aliased("transaction_id", table, columnPrefix + "_transaction_id"));
        columns.add(Column.aliased("customer_id", table, columnPrefix + "_customer_id"));
        return columns;
    }
}
